package com.example.Services;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.example.Entity.Category;
import com.example.Repositories.CategoryRepository;

public class CategoryServiceImpl implements CategoryService
{
	@Autowired
	private CategoryRepository categoryRepository;

	@Override
	public void deleteCategory(int categoryId) 
	{
		Category c=categoryRepository.findById(categoryId).get();
		if(c!=null) {
			categoryRepository.delete(c);
		}
		
	}

	


    @Override
    @Transactional
    public Category updateCategory(int categoryId, Category updatedCategory) {
        Category existingCategory = categoryRepository.findById(categoryId).orElse(null);

        if (existingCategory != null) {
            
            existingCategory.setCategoryName(updatedCategory.getCategoryName());
            existingCategory.setFlag(updatedCategory.getFlag());
            existingCategory.setParentCatID(updatedCategory.getParentCatID());
            existingCategory.setCatImgPath(updatedCategory.getCatImgPath());

            
            return categoryRepository.save(existingCategory);
        }

        return null; 
    }


	@Override
	public Category addCategory(Category category) {
		
		return categoryRepository.save(category);
	}

	@Override
	public Category getCategoryById(int categoryId) {
		
		return categoryRepository.findById(categoryId).get();
	}

	@Override
	public List<Category> getAllCategorys() 
	{
		return categoryRepository.findAll();
		

	}

}
